name: PWA-POC CI/CD

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{github.ref}}
      - run: echo matches...
        if: github.ref == 'refs/heads/master'
      - uses: actions/checkout@v2
      # - name: Cache node modules
      #   uses: actions/cache@v1
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - name: Use Node.js 12.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "12.x"
      # - run: npm ci
      # - run: npm run check
      #   env:
      #     CI: true

  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - run: echo ${{github.ref}}
      # - uses: actions/checkout@v2
      # - name: Cache node modules
      #   uses: actions/cache@v1
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - name: Use Node.js 12.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "12.x"
      # - run: npm ci
      # - run: npm run build:prod
      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: dist
      #     path: dist/pwa-poc

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
      - run: echo ${{github.ref}}
      # - uses: actions/checkout@v2
      # - name: Use Node.js 12.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "12.x"
      # - run: npm install firebase-tools
      # - uses: actions/download-artifact@v1
      #   with:
      #     name: dist
      # - run: npm run firebase deploy -- --project fir-poc-1 --only hosting
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
